[package]
name = "waylyrics"
version = "0.2.12"
edition = "2021"
description = "Simple On Screen lyrics Display for linux/unix"
authors = ["poly000"]
license-file = "LICENSE"

[profile.release]
lto = "thin"
strip = true
panic = "abort"

[profile.dev]
panic = "abort"

[profile.test]
debug = "none"
incremental = true
lto = "off"

[dependencies]
mimalloc = { version = "0.1.39", optional = true, default-features = false }
once_cell = "1.19.0"

# serializing
toml = "0.8.0"
toml_edit = { version = "0.22.6", features = ["serde"] }
documented = "0.3.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0.113"
rust_decimal = { version = "1.34.0", default-features = false, features = [
    "std",
] }
rust_decimal_macros = "1.34.0"
url = "2.5.0"

# ui
gtk = { version = "0.8.0", package = "gtk4" }
glib-macros = "0.19.2"

# lyric providers + parse
ncmapi = { git = "https://github.com/waylyrics/ncmapi-rs.git", rev = "51b4d121" }
qqmusic-rs = { git = "https://github.com/waylyrics/qqmusic-rs.git", rev = "22e66ba" }
lrc-nom = "0.2.0"

# logging
tracing = "0.1.40"
tracing-journald = "0.3.0"
tracing-subscriber = { version = "0.3.18", features = ["env-filter"] }

# cache
md5 = "0.7.0"

# utils
regex = "1.10.3"
xdg = "2.5.2"
derivative = "2.2.0"
strum = { version = "0.26.1", default-features = false, features = ["derive"] }
sorensen = "0.2.0"

# error handling
anyhow = "1.0.79"
thiserror = "1.0.56"

# networking
async-trait = "0.1.77"
openssl = "0.10.60"
tokio = { version = "1.35.1", features = [
    "macros",
    "net",
    "time",
    "rt",
    "rt-multi-thread",
] }
reqwest = { version = "0.11.23" }

# async event
async-channel = { version = "2.2.0", optional = true }

# i18n
gettext-rs = { version = "0.7.0", features = ["gettext-system"] }

[features] # cross thread gtk action
mimalloc = ["dep:mimalloc"]
net-test = []
default = ["mimalloc", "net-test", "tray-icon"]
vendored = ["dbus/vendored", "openssl/vendored"]
tray-icon = ["action-event", "dep:ksni"]
action-event = ["dep:async-channel"]

[target.'cfg(unix)'.dependencies]
# MPRIS integration
dbus = "0.9.7"
ksni = { version = "0.2.1", optional = true }
mpris = "2.0.1"

[target.'cfg(windows)'.dependencies]
dbus = { version = "0.1.0", package = "dbus-dummy" }
ksni = { version = "0.1.0", package = "ksni-dummy", optional = true }
